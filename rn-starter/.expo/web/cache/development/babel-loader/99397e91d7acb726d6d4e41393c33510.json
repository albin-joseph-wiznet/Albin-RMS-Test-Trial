{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albin Joseph\\\\Desktop\\\\React Native Trial Learn\\\\rn-starter\\\\src\\\\TextAnimator.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\n\nvar TextAnimator = function (_React$Component) {\n  _inherits(TextAnimator, _React$Component);\n\n  var _super = _createSuper(TextAnimator);\n\n  function TextAnimator(props) {\n    var _this;\n\n    _classCallCheck(this, TextAnimator);\n\n    _this = _super.call(this, props);\n    _this.animatedValues = [];\n    _this.animations = [];\n    var textArr = props.content.split('');\n    textArr.forEach(function (_, i) {\n      _this.animatedValues[i] = new Animated.Value(0);\n    });\n    _this.textArr = textArr;\n    return _this;\n  }\n\n  _createClass(TextAnimator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate(1);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.animate(0);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var _this2 = this;\n\n      var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.toValue = toValue;\n      this.animations = this.textArr.map(function (_, i) {\n        return Animated.timing(_this2.animatedValues[i], {\n          toValue: toValue,\n          duration: _this2.props.timing\n        });\n      });\n      Animated.stagger(this.props.timing / 5, this.animations).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: [this.props.style, styles.textWrapper],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, this.textArr.map(function (v, i) {\n        return React.createElement(Animated.Text, {\n          key: v + \"-\" + i,\n          style: [_this3.props.textStyle, styles.textStyle, {\n            opacity: _this3.animatedValues[i],\n            transform: [{\n              translateY: Animated.multiply(_this3.animatedValues[i], new Animated.Value(-2))\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }, v, \"\" + (i < _this3.textArr.length ? '' : '' + ' '));\n      }));\n    }\n  }]);\n\n  return TextAnimator;\n}(React.Component);\n\nTextAnimator.defaultProps = {\n  timing: 200,\n  content: ''\n};\nexport default TextAnimator;\nvar styles = StyleSheet.create({\n  textWrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Albin Joseph/Desktop/React Native Trial Learn/rn-starter/src/TextAnimator.js"],"names":["React","TextAnimator","props","animatedValues","animations","textArr","content","split","forEach","_","i","Animated","Value","animate","toValue","map","timing","duration","stagger","start","style","styles","textWrapper","v","textStyle","opacity","transform","translateY","multiply","length","Component","defaultProps","StyleSheet","create","flexDirection","flexWrap","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;IAGMC,Y;;;;;AAGJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UAFnBC,cAEmB,GAFF,EAEE;AAAA,UADnBC,UACmB,GADN,EACM;AAGjB,QAAMC,OAAO,GAAGH,KAAK,CAACI,OAAN,CAAcC,KAAd,CAAoB,EAApB,CAAhB;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,YAAKP,cAAL,CAAoBO,CAApB,IAAyB,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAzB;AACD,KAFD;AAGA,UAAKP,OAAL,GAAeA,OAAf;AAPiB;AAQlB;;;;wCAEmB;AAClB,WAAKQ,OAAL,CAAa,CAAb;AACD;;;2CAEsB;AACrB,WAAKA,OAAL,CAAa,CAAb;AACD;;;8BAEoB;AAAA;;AAAA,UAAbC,OAAa,uEAAH,CAAG;AACnB,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKV,UAAL,GAAkB,KAAKC,OAAL,CAAaU,GAAb,CAAiB,UAACN,CAAD,EAAIC,CAAJ,EAAU;AAC3C,eAAOC,QAAQ,CAACK,MAAT,CAAgB,MAAI,CAACb,cAAL,CAAoBO,CAApB,CAAhB,EAAwC;AAC7CI,UAAAA,OAAO,EAAPA,OAD6C;AAE7CG,UAAAA,QAAQ,EAAE,MAAI,CAACf,KAAL,CAAWc;AAFwB,SAAxC,CAAP;AAID,OALiB,CAAlB;AAMAL,MAAAA,QAAQ,CAACO,OAAT,CAAiB,KAAKhB,KAAL,CAAWc,MAAX,GAAoB,CAArC,EAAuC,KAAKZ,UAA5C,EAAwDe,KAAxD;AACD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC,KAAKjB,KAAL,CAAWkB,KAAZ,EAAmBC,MAAM,CAACC,WAA1B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjB,OAAL,CAAaU,GAAb,CAAiB,UAACQ,CAAD,EAAIb,CAAJ,EAAU;AAC1B,eACE,oBAAC,QAAD,CAAU,IAAV;AACE,UAAA,GAAG,EAAKa,CAAL,SAAUb,CADf;AAEE,UAAA,KAAK,EAAE,CACL,MAAI,CAACR,KAAL,CAAWsB,SADN,EAELH,MAAM,CAACG,SAFF,EAGL;AACEC,YAAAA,OAAO,EAAE,MAAI,CAACtB,cAAL,CAAoBO,CAApB,CADX;AAEEgB,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,UAAU,EAAEhB,QAAQ,CAACiB,QAAT,CACV,MAAI,CAACzB,cAAL,CAAoBO,CAApB,CADU,EAEV,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAC,CAApB,CAFU;AADd,aADS;AAFb,WAHK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAiBGW,CAjBH,QAkBMb,CAAC,GAAG,MAAI,CAACL,OAAL,CAAawB,MAAjB,GAA0B,EAA1B,GAA+B,KAAK,GAlB1C,EADF;AAsBD,OAvBA,CADH,CADF;AA4BD;;;;EA7DwB7B,KAAK,CAAC8B,S;;AAgEjC7B,YAAY,CAAC8B,YAAb,GAA4B;AAC1Bf,EAAAA,MAAM,EAAE,GADkB;AAE1BV,EAAAA,OAAO,EAAE;AAFiB,CAA5B;AAKA,eAAeL,YAAf;AAEA,IAAMoB,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,WAAW,EAAE;AACXY,IAAAA,aAAa,EAAE,KADJ;AAEXC,IAAAA,QAAQ,EAAE,MAFC;AAGXC,IAAAA,cAAc,EAAE;AAHL;AADkB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { Text, View, StyleSheet, Animated } from 'react-native';\r\n\r\nclass TextAnimator extends React.Component {\r\n  animatedValues = [];\r\n  animations = [];\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const textArr = props.content.split('');\r\n    textArr.forEach((_, i) => {\r\n      this.animatedValues[i] = new Animated.Value(0);\r\n    });\r\n    this.textArr = textArr;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.animate(1);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.animate(0)\r\n  }\r\n\r\n  animate(toValue = 1) {\r\n    this.toValue = toValue\r\n    this.animations = this.textArr.map((_, i) => {\r\n      return Animated.timing(this.animatedValues[i], {\r\n        toValue,\r\n        duration: this.props.timing,\r\n      });\r\n    });\r\n    Animated.stagger(this.props.timing / 5,this.animations).start()\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={[this.props.style, styles.textWrapper]}>\r\n        {this.textArr.map((v, i) => {\r\n          return (\r\n            <Animated.Text\r\n              key={`${v}-${i}`}\r\n              style={[\r\n                this.props.textStyle,\r\n                styles.textStyle,\r\n                {\r\n                  opacity: this.animatedValues[i],\r\n                  transform: [\r\n                    {\r\n                      translateY: Animated.multiply(\r\n                        this.animatedValues[i],\r\n                        new Animated.Value(-2)\r\n                      ),\r\n                    },\r\n                  ],\r\n                },\r\n              ]}>\r\n              {v}\r\n              {`${i < this.textArr.length ? '' : '' + ' '}`}\r\n            </Animated.Text>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nTextAnimator.defaultProps = {\r\n  timing: 200,\r\n  content: '',\r\n};\r\n\r\nexport default TextAnimator;\r\n\r\nconst styles = StyleSheet.create({\r\n  textWrapper: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}